"use strict";

const path = require("path");
const fs = require("fs");
const http = require("http");
const fetch = require("node-fetch");

function getConfig() {
  const filePath = path.resolve("./uptime.config.json");
  const defaultConfig = {
    debug: false,
    create_api: true,
    port: 3000,
    path: "/",
    body: {
      title: "replit.uptimer ⚡",
      description:
        "Don't worry about downtime anymore! With replit.uptimer, your project will work 24 hours a day, 365 days a year. Powered by the npm package replit.uptimer, you can rest easy knowing your project is always running. Try replit.uptimer today and never worry about downtime again!",
      url: "https://npmjs.com/package/replit.uptimer",
    },
  };

  try {
    let data = fs.readFileSync(filePath, { encoding: "utf8", flag: "r" });
    return { ...defaultConfig, ...JSON.parse(data) };
  } catch (e) {
    return defaultConfig;
  }
}

async function createAPI() {
  const config = getConfig();

  return new Promise((resolve, reject) => {
    const server = http.createServer((request, response) => {
      const reqURL = request.url;
      const reqMethod = request.method;

      if (reqMethod === "GET" && reqURL === config.path) {
        response.writeHead(200, {
          "Content-Type": "text/html",
        });
        response.write(`<!DOCTYPE html>
          <html dir="rtl">
          <head>
            <link rel="preconnect" href="https://fonts.googleapis.com">
            <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
            <link href="https://fonts.googleapis.com/css2?family=Amiri&family=Cairo:wght@200;300;400;500;600;700;800;900;1000&family=Changa:wght@500&family=El+Messiri:wght@500&family=Noto+Kufi+Arabic:wght@900&display=swap" rel="stylesheet">
            <title>replit.uptimer ⚡</title>
            <style>
              a:hover {
                color: #212732;
              }
        
              body {
                background: linear-gradient(to right, #000, #0c0f17, #151a24);
                display: flex;
                justify-content: center;
                font-family: 'Cairo', 'Amiri', serif;
                font-weight: 600;
                align-items: center;
                min-height: 100vh;
                margin: 0;
              }
        
              .container {
                text-align: center;
                color: white;
              }
        
              h1 {
                font-size: 1.5rem;
                color: #ffbf00;
              }
        
              p {
                font-size: 0.75rem;
                margin: 0.5rem 1.25rem;
              }
        
              a {
                display: inline-block;
                background-color: white;
                color: #0C0F17;
                padding: 4px 12px;
                font-size: 0.75rem;
                text-decoration: none;
                font-weight: bold;
                border-radius: 5.625px;
              }
            </style>
          </head>
          <body>
            <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha2/js/bootstrap.min.js"></script>
            <div class="container">
              <h1 dir="ltr"><i class="bi bi-lightning-charge-fill"></i> replit.uptimer</h1>
              <p>Don't worry about downtime anymore! With replit.uptimer, your project will work 24 hours a day, 365 days a year. Powered by the npm package BlueFlame.uptimer, you can rest easy knowing your project is always running. Try replit.uptimer today and never worry about downtime again<br><br>لا تقلق بشأن انقطاع الخدمة بعد الآن! مع replit.uptimer، سيعمل مشروعك على مدار 24 ساعة في اليوم، 365 يومًا في السنة. يتم تشغيل مشروعك دائمًا بفضل حزمة replit.uptimer. يمكنك أن ترتاح وتعلم أن مشروعك يعمل دومًا. جرب replit.uptimer اليوم ولا تقلق بشأن انقطاع الخدمة مرة أخرى</p>
              <a dir="ltr" href="https://npmjs.com/package/blueflame.uptimer" target="_blank" rel="noopener noreferrer"><i class="bi bi-box-arrow-up-right"></i> اعرف المزيد </a>
            </div>
          </body>
          </html>`);
        response.end();
      }
    });

    server.listen(config.port, () => {
      console.log(`⚡️ Uptime for your project is now created by \u001b[38;5;209m\u001b[1mreplit.uptimer\u001b[0m`);
      resolve(config);
    });

    server.on("error", (e) => {
      reject(e);
    });
  });
}

function UptimeNow() {
  if (!process.env.REPL_ID || !process.env.REPL_SLUG || !process.env.REPL_OWNER) {
    throw new TypeError("The replit.uptimer package only works with Replit projects");
  }

  createAPI()
    .then((config) => {
      const replId = process.env.REPL_ID.toLowerCase();
      const replSlug = process.env.REPL_SLUG.toLowerCase();
      const replOwner = process.env.REPL_OWNER.toLowerCase();
      const apiURL = `https://api.shuruhatik.com/uptime/${replId}/${replSlug}/${replOwner}/${config.path.split("/").join("-")}`;

      fetch(apiURL)
        .then((response) => response.json())
        .then((body) => {
          if (config.debug) {
            console.log(body);
          }
        })
        .catch((e) => {
          if (config.debug) {
            console.log(e.message);
          }
        });

      setTimeout(() => {
        fetch(apiURL)
          .then((response) => response.json())
          .then((body) => {
            if (config.debug) {
              console.log(body);
            }
          })
          .catch((e) => {
            if (config.debug) {
              console.log(e.message);
            }
          });
      }, 70000);
    })
    .catch((e) => {
      console.error(e);
    });
}

exports.UptimeNow = UptimeNow;
			